AWSTemplateFormatVersion: 2010-09-09

Description: |
  Provision all the global Resources (such as IAM Roles/Policies, WAF Web ACL) needed in an AWS Account to support provisioning one
  or more Marketing Sites Stacks in the Account.

Parameters:
  # https://github.blog/changelog/2023-06-27-github-actions-update-on-oidc-integration-with-aws/
  GitHubIntermediateCertificateThumbprintList:
    Type: CommaDelimitedList
    Default: 6938fd4d98bab03faadb97b34396831e3780aea1, 1c58a3a8518e8759bf075b76b750d4f2df264fcd
    Description: List of thumbprints of GitHub intermediate certificates that sign the certificates used by GitHub Actions.

<%
  # Build configuration for each environment, collecting all possible base domain names
  # that could be used in that environment across all site types
  marketing_sites_environment_configuration = {}

  MarketingSites::Configuration.environment_types.each do |environment_type|
    # Get all unique base domain names for this environment across all site types
    base_domains_for_environment = []
    hyphenated_domains_for_environment = []

    MarketingSites::Configuration.site_types.each do |site_type|
      config = MarketingSites::Configuration.site_config(site_type, environment_type)
      base_domain = config.base_domain_name

      unless base_domains_for_environment.include?(base_domain)
        base_domains_for_environment << base_domain
        hyphenated_domains_for_environment << base_domain.tr('.', '-')
      end
    end

    marketing_sites_environment_configuration[environment_type] = {
      base_domain_names: base_domains_for_environment,
      hyphenated_base_domains: hyphenated_domains_for_environment
    }
  end
%>

Resources:
  # ------------------------------------------------------------
  # Web Application Firewall (WAF) Resources
  # ------------------------------------------------------------
  MarketingSitesIPv4AllowList:
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: marketing-sites_IPV4_Allow
      Description: IPv4 addresses allowed to bypass WAF rules for marketing sites
      Scope: CLOUDFRONT
      IPAddressVersion: IPV4
      Addresses: []  # Empty initially - typically edited manually in response to need.
  MarketingSitesIPv6AllowList:
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: marketing-sites_IPV6_Allow
      Description: IPv6 addresses allowed to bypass WAF rules for marketing sites
      Scope: CLOUDFRONT
      IPAddressVersion: IPV6
      Addresses: []  # Empty initially - typically edited manually in response to need.
  MarketingSitesIPv4BlockList:
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: marketing-sites_IPV4_Block
      Description: IPv4 addresses blocked by WAF for marketing sites
      Scope: CLOUDFRONT
      IPAddressVersion: IPV4
      Addresses: []  # Empty initially - typically edited manually in response to need.
  MarketingSitesIPv6BlockList:
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: marketing-sites_IPV6_Block
      Description: IPv6 addresses blocked by WAF for marketing sites
      Scope: CLOUDFRONT
      IPAddressVersion: IPV6
      Addresses: []  # Empty initially - typically edited manually in response to need.
  # Any Marketing Site provisioned in this AWS Account can use this WebACL to protect its CloudFront Distribution.
  MarketingSitesWebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: marketing-sites
      Description: Protect Marketing Websites in this AWS Account from Distributed Denial of Service Attacks and malicious HTTP requests.
      Scope: CLOUDFRONT
      DefaultAction:
        Allow: {}
      VisibilityConfig:
        CloudWatchMetricsEnabled: true
        MetricName: marketing-sites
        SampledRequestsEnabled: true
      Rules:
        - Name: AWS-AWSManagedRulesAntiDDoSRuleSet
          Priority: 0
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAntiDDoSRuleSet
              ManagedRuleGroupConfigs:
                - AWSManagedRulesAntiDDoSRuleSet:
                    SensitivityToBlock: LOW
                    ClientSideActionConfig:
                      Challenge:
                        UsageOfAction: ENABLED
                        Sensitivity: HIGH
                        # Don't Challenge HTTP requests for URLs that serve a different content-type from text/html
                        ExemptUriRegularExpressions:
                          # `/api` endpoints typically serve JSON.
                          - RegexString: '\\/api\\/'
                          # All assets are served from `/_next/static` and HTML pages are never served from this path.
                          - RegexString: '\\/_next\\/static'
                          # The `/_next/image` endpoint proxies images from the Contentful webservice.
                          - RegexString: '\\/_next\\/image'
                          # Just to be safe, exclude paths where the file extension is a non-HTML resource.
                          - RegexString: '\\.(acc|avi|css|gif|ico|jpe?g|js|json|mp[34]|ogg|otf|pdf|png|tiff?|ttf|txt|webm|webp|woff2?|xml)$'
              RuleActionOverrides:
                - Name: ChallengeAllDuringEvent
                  ActionToUse:
                    Challenge: {}
                - Name: ChallengeDDoSRequests
                  ActionToUse:
                    Challenge: {}
                - Name: DDoSRequests
                  ActionToUse:
                    Challenge: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesAntiDDoSRuleSet
            SampledRequestsEnabled: true
        - Name: marketing-sites_IPV4_Allow
          Priority: 1
          Action:
            Allow: {}
          Statement:
            IPSetReferenceStatement:
              Arn: !GetAtt MarketingSitesIPv4AllowList.Arn
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: marketing-sites_IPV4_Allow
            SampledRequestsEnabled: true
        - Name: marketing-sites_IPV6_Allow
          Priority: 2
          Action:
            Allow: {}
          Statement:
            IPSetReferenceStatement:
              Arn: !GetAtt MarketingSitesIPv6AllowList.Arn
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: marketing-sites_IPV6_Allow
            SampledRequestsEnabled: true
        - Name: marketing-sites_IPV4_Block
          Priority: 3
          Action:
            Block: {}
          Statement:
            IPSetReferenceStatement:
              Arn: !GetAtt MarketingSitesIPv4BlockList.Arn
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: marketing-sites_IPV4_Block
            SampledRequestsEnabled: true
        - Name: marketing-sites_IPV6_Block
          Priority: 4
          Action:
            Block: {}
          Statement:
            IPSetReferenceStatement:
              Arn: !GetAtt MarketingSitesIPv6BlockList.Arn
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: marketing-sites_IPV6_Block
            SampledRequestsEnabled: true
        - Name: GeoRule
          Priority: 5
          Action:
            Block: {}
          Statement:
            GeoMatchStatement:
              CountryCodes:
                - KP
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: GeoRule
            SampledRequestsEnabled: true
        # Label GET requests to HTML content to Scope Down Managed Rules CHALLENGE Action
        # This label is used by subsequent managed rules to only challenge HTML requests,
        # preventing challenges on API calls and static assets which would break functionality
        - Name: LabelHTMLRequests
          Priority: 6
          Action:
            Count: {}  # Just add label, don't block
          Statement:
            AndStatement:
              Statements:
                - ByteMatchStatement:
                    SearchString: GET
                    FieldToMatch:
                      Method: {}
                    TextTransformations:
                      - Priority: 0
                        Type: NONE
                    PositionalConstraint: EXACTLY
                - NotStatement:
                    Statement:
                      OrStatement:
                        Statements:
                          # `/api` endpoints typically serve JSON.
                          - ByteMatchStatement:
                              SearchString: /api/
                              FieldToMatch:
                                UriPath: {}
                              TextTransformations:
                                - Priority: 0
                                  Type: NONE
                              PositionalConstraint: CONTAINS
                          # All assets are served from `/_next/static` and HTML pages are never served from this path.
                          - ByteMatchStatement:
                              SearchString: /_next/static
                              FieldToMatch:
                                UriPath: {}
                              TextTransformations:
                                - Priority: 0
                                  Type: NONE
                              PositionalConstraint: CONTAINS
                          # The `/_next/image` endpoint proxies images from the Contentful webservice.
                          - ByteMatchStatement:
                              SearchString: /_next/image
                              FieldToMatch:
                                UriPath: {}
                              TextTransformations:
                                - Priority: 0
                                  Type: NONE
                              PositionalConstraint: CONTAINS
                          # Just to be safe, exclude paths where the file extension is a non-HTML resource.
                          - RegexMatchStatement:
                              RegexString: '\\.(acc|avi|css|gif|ico|jpe?g|js|json|mp[34]|ogg|otf|pdf|png|tiff?|ttf|txt|webm|webp|woff2?|xml)$'
                              FieldToMatch:
                                UriPath: {}
                              TextTransformations:
                                - Priority: 0
                                  Type: NONE
          # This Label helps downstream Rules conditionally apply the CHALLENGE action, so don't Sample or publish Metrics.
          VisibilityConfig:
            CloudWatchMetricsEnabled: false
            MetricName: LabelHTMLRequests
            SampledRequestsEnabled: false
          RuleLabels:
            - Name: HTMLContent
        - Name: AWS-AWSManagedRulesAmazonIpReputationList
          Priority: 7
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAmazonIpReputationList
              ScopeDownStatement:
                LabelMatchStatement:
                  Scope: LABEL
                  Key: awswaf:marketing-sites:LabelHTMLRequests:HTMLContent
              RuleActionOverrides:
                - Name: AWSManagedReconnaissanceList
                  ActionToUse:
                    Challenge: {}
                - Name: AWSManagedIPDDoSList
                  ActionToUse:
                    Challenge: {}
                - Name: AWSManagedIPReputationList
                  ActionToUse:
                    Challenge: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesAmazonIpReputationList
            SampledRequestsEnabled: true
        - Name: AWS-AWSManagedRulesAnonymousIpList
          Priority: 8
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAnonymousIpList
              ScopeDownStatement:
                LabelMatchStatement:
                  Scope: LABEL
                  Key: awswaf:marketing-sites:LabelHTMLRequests:HTMLContent
              RuleActionOverrides:
                - Name: AnonymousIPList
                  ActionToUse:
                    Challenge: {}
                - Name: HostingProviderIPList
                  ActionToUse:
                    Challenge: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesAnonymousIpList
            SampledRequestsEnabled: true
        # Protection against Linux-specific Local File Inclusion attacks
        - Name: AWS-AWSManagedRulesLinuxRuleSet
          Priority: 9
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesLinuxRuleSet
              ScopeDownStatement:
                LabelMatchStatement:
                  Scope: LABEL
                  Key: awswaf:marketing-sites:LabelHTMLRequests:HTMLContent
              RuleActionOverrides:
                - Name: LFI_URIPATH
                  ActionToUse:
                    Challenge: {}
                - Name: LFI_QUERYSTRING
                  ActionToUse:
                    Challenge: {}
                - Name: LFI_HEADER
                  ActionToUse:
                    Challenge: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesLinuxRuleSet
            SampledRequestsEnabled: true
        # Protection against requests with known malicious inputs
        - Name: AWS-AWSManagedRulesKnownBadInputsRuleSet
          Priority: 10
          OverrideAction:
            None: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
              ScopeDownStatement:
                LabelMatchStatement:
                  Scope: LABEL
                  Key: awswaf:marketing-sites:LabelHTMLRequests:HTMLContent
              RuleActionOverrides:
                - Name: JavaDeserializationRCE_BODY
                  ActionToUse:
                    Challenge: {}
                - Name: JavaDeserializationRCE_URIPATH
                  ActionToUse:
                    Challenge: {}
                - Name: JavaDeserializationRCE_QUERYSTRING
                  ActionToUse:
                    Challenge: {}
                - Name: JavaDeserializationRCE_HEADER
                  ActionToUse:
                    Challenge: {}
                - Name: Host_localhost_HEADER
                  ActionToUse:
                    Challenge: {}
               # TODO: This will never run because we're only scoping this Managed Rule to HTTP GET for HTML content.
                - Name: PROPFIND_METHOD
                  ActionToUse:
                    Challenge: {}
                - Name: ExploitablePaths_URIPATH
                  ActionToUse:
                    Challenge: {}
                - Name: Log4JRCE_QUERYSTRING
                  ActionToUse:
                    Challenge: {}
                - Name: Log4JRCE_BODY
                  ActionToUse:
                    Challenge: {}
                - Name: Log4JRCE_URIPATH
                  ActionToUse:
                    Challenge: {}
                - Name: Log4JRCE_HEADER
                  ActionToUse:
                    Challenge: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesKnownBadInputsRuleSet
            SampledRequestsEnabled: true
        # Rate based rules don't work well for us because schools and school districts often have multiple users
        # simultaneously visiting our sites from a single source IP address, so these Limits are set fairly high.
        - Name: GlobalRateBasedRule
          Priority: 11
          Action:
            Count: {}
          Statement:
            RateBasedStatement:
              AggregateKeyType: IP
              EvaluationWindowSec: 300
              Limit: 100000
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: GlobalRateBasedRule
            SampledRequestsEnabled: true
        - Name: RateBasedRuleGET
          Priority: 12
          Action:
            Count: {}
          Statement:
            RateBasedStatement:
              AggregateKeyType: IP
              EvaluationWindowSec: 300
              Limit: 100000
              ScopeDownStatement:
                ByteMatchStatement:
                  FieldToMatch:
                    Method: {}
                  PositionalConstraint: EXACTLY
                  SearchString: GET
                  TextTransformations:
                    - Priority: 0
                      Type: NONE
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: RateBasedRuleGET
            SampledRequestsEnabled: true
        - Name: RateBasedRulePOST
          Priority: 13
          Action:
            Count: {}
          Statement:
            RateBasedStatement:
              AggregateKeyType: IP
              EvaluationWindowSec: 300
              Limit: 10000
              ScopeDownStatement:
                OrStatement:
                  Statements:
                    - ByteMatchStatement:
                        FieldToMatch:
                          Method: {}
                        PositionalConstraint: EXACTLY
                        SearchString: POST
                        TextTransformations:
                          - Priority: 0
                            Type: NONE
                    - ByteMatchStatement:
                        FieldToMatch:
                          Method: {}
                        PositionalConstraint: EXACTLY
                        SearchString: PUT
                        TextTransformations:
                          - Priority: 0
                            Type: NONE
                    - ByteMatchStatement:
                        FieldToMatch:
                          Method: {}
                        PositionalConstraint: EXACTLY
                        SearchString: DELETE
                        TextTransformations:
                          - Priority: 0
                            Type: NONE
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: RateBasedRulePOST
            SampledRequestsEnabled: true
        - Name: BodySizeRestrictionRule
          Priority: 14
          Action:
            Count: {}
          Statement:
            SizeConstraintStatement:
              ComparisonOperator: GT
              FieldToMatch:
                Body:
                  OversizeHandling: MATCH
              Size: 16384
              TextTransformations:
                - Priority: 0
                  Type: NONE
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: BodySizeRestrictionRule
            SampledRequestsEnabled: true
        - Name: ManagedIPDDoSRateLimit
          Priority: 16
          Action:
            Count: {}
          Statement:
            RateBasedStatement:
              AggregateKeyType: IP
              EvaluationWindowSec: 300
              Limit: 10000
              ScopeDownStatement:
                LabelMatchStatement:
                  Key: "awswaf:managed:aws:amazon-ip-list:AWSManagedIPDDoSList"
                  Scope: LABEL
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: ManagedIPDDoSRateLimit
            SampledRequestsEnabled: true
        - Name: AWS-AWSManagedRulesCommonRuleSet
          Priority: 17
          OverrideAction:
            Count: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
              RuleActionOverrides:
                - Name: NoUserAgent_HEADER
                  ActionToUse:
                    Challenge: {}
                - Name: UserAgent_BadBots_HEADER
                  ActionToUse:
                    Challenge: {}
                - Name: SizeRestrictions_QUERYSTRING
                  ActionToUse:
                    Challenge: {}
                - Name: SizeRestrictions_Cookie_HEADER
                  ActionToUse:
                    Challenge: {}
                - Name: SizeRestrictions_BODY
                  ActionToUse:
                    Challenge: {}
                - Name: SizeRestrictions_URIPATH
                  ActionToUse:
                    Challenge: {}
                - Name: EC2MetaDataSSRF_BODY
                  ActionToUse:
                    Challenge: {}
                - Name: EC2MetaDataSSRF_COOKIE
                  ActionToUse:
                    Challenge: {}
                - Name: EC2MetaDataSSRF_URIPATH
                  ActionToUse:
                    Challenge: {}
                - Name: EC2MetaDataSSRF_QUERYARGUMENTS
                  ActionToUse:
                    Challenge: {}
                - Name: GenericLFI_QUERYARGUMENTS
                  ActionToUse:
                    Challenge: {}
                - Name: GenericLFI_URIPATH
                  ActionToUse:
                    Challenge: {}
                - Name: GenericLFI_BODY
                  ActionToUse:
                    Challenge: {}
                - Name: RestrictedExtensions_URIPATH
                  ActionToUse:
                    Challenge: {}
                - Name: RestrictedExtensions_QUERYARGUMENTS
                  ActionToUse:
                    Challenge: {}
                - Name: GenericRFI_QUERYARGUMENTS
                  ActionToUse:
                    Challenge: {}
                - Name: GenericRFI_BODY
                  ActionToUse:
                    Challenge: {}
                - Name: GenericRFI_URIPATH
                  ActionToUse:
                    Challenge: {}
                - Name: CrossSiteScripting_COOKIE
                  ActionToUse:
                    Challenge: {}
                - Name: CrossSiteScripting_QUERYARGUMENTS
                  ActionToUse:
                    Challenge: {}
                - Name: CrossSiteScripting_BODY
                  ActionToUse:
                    Challenge: {}
                - Name: CrossSiteScripting_URIPATH
                  ActionToUse:
                    Challenge: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesCommonRuleSet
            SampledRequestsEnabled: true
        # Marketing Sites don't have a relational database, but anyone probing SQL injection is likely malicious.
        - Name: AWS-AWSManagedRulesSQLiRuleSet
          Priority: 18
          OverrideAction:
            Count: {}
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesSQLiRuleSet
              RuleActionOverrides:
                - Name: SQLiExtendedPatterns_QUERYARGUMENTS
                  ActionToUse:
                    Challenge: {}
                - Name: SQLi_QUERYARGUMENTS
                  ActionToUse:
                    Challenge: {}
                - Name: SQLi_BODY
                  ActionToUse:
                    Challenge: {}
                - Name: SQLi_COOKIE
                  ActionToUse:
                    Challenge: {}
                - Name: SQLi_URIPATH
                  ActionToUse:
                    Challenge: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWS-AWSManagedRulesSQLiRuleSet
            SampledRequestsEnabled: true

  # ------------------------------------------------------------
  # GitHub OIDC Provider and IAM Resources
  # ------------------------------------------------------------

  GitHubOpenIDConnectProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      # See: https://docs.github.com/en/actions/security-for-github-actions/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services#adding-the-identity-provider-to-aws
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList: !Ref GitHubIntermediateCertificateThumbprintList

  CloudFormationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: marketing-sites-cloudformation-policy
      Description: CloudFormation permissions for marketing sites
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: CloudFormationFullAccess
            Effect: Allow
            Action: cloudformation:*
            Resource: !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stack/*marketing-sites-*"
  EC2ManagementPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: marketing-sites-ec2-management-policy
      Description: EC2 permissions for marketing sites
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowEC2CreateActions
            Effect: Allow
            Action:
              - ec2:Create*
              - ec2:Allocate*
              - ec2:Associate*
              - ec2:Attach*
              - ec2:Authorize*
              - ec2:Modify*
            Resource: '*'
          - Sid: AllowEC2DescribeActions
            Effect: Allow
            Action: ec2:Describe*
            Resource: '*'
  ECSManagementPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: marketing-sites-ecs-management-policy
      Description: ECS permissions for marketing sites
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowECSCreateActions
            Effect: Allow
            Action:
              - ecs:Create*
              - ecs:Register*
              - ecs:Tag*
            Resource:
              - !Sub "arn:aws:ecs:*:${AWS::AccountId}:cluster/*"
              - !Sub "arn:aws:ecs:*:${AWS::AccountId}:task-definition/*marketing-sites-*:*"
              - !Sub "arn:aws:ecs:*:${AWS::AccountId}:service/*/*-marketing-sites-*"
          - Sid: AllowECSDescribeActions
            Effect: Allow
            Action:
              - ecs:Describe*
              - ecs:Deregister*
            Resource: '*'
  LoadBalancerManagementPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: marketing-sites-loadbalancer-management-policy
      Description: Load Balancer permissions for marketing sites
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowELBCreateActions
            Effect: Allow
            Action:
              - elasticloadbalancing:Create*
              - elasticloadbalancing:Register*
              - elasticloadbalancing:Add*
              - elasticloadbalancing:Modify*
            Resource: '*'
          - Sid: AllowELBDescribeAndDeleteNonTaggable
            Effect: Allow
            Action:
              - elasticloadbalancing:Describe*
              - elasticloadbalancing:DeleteListener
            Resource: '*'
  CloudFrontManagementPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: marketing-sites-cloudfront-waf-shield-policy
      Description: CloudFront distribution management with WAF and Shield Advanced protection capabilities
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontCreateActions
            Effect: Allow
            Action:
              - cloudfront:Create*
              - cloudfront:Publish*
              - cloudfront:Tag*
            Resource: '*'
          - Sid: AllowCloudFrontActionsNonTaggableResources
            Effect: Allow
            Action:
              - cloudfront:CreateCachePolicy
              - cloudfront:UpdateCachePolicy
              - cloudfront:DeleteCachePolicy
              - cloudfront:GetCachePolicy
              - cloudfront:ListCachePolicies
              - cloudfront:CreateOriginAccessControl
              - cloudfront:UpdateOriginAccessControl
              - cloudfront:DeleteOriginAccessControl
              - cloudfront:GetOriginAccessControl
              - cloudfront:ListOriginAccessControls
              - cloudfront:CreateResponseHeadersPolicy
              - cloudfront:UpdateResponseHeadersPolicy
              - cloudfront:DeleteResponseHeadersPolicy
              - cloudfront:GetResponseHeadersPolicy
              - cloudfront:ListResponseHeadersPolicies
              - cloudfront:CreateFunction
              - cloudfront:UpdateFunction
              - cloudfront:DeleteFunction
              - cloudfront:DescribeFunction
              - cloudfront:GetFunction
              - cloudfront:ListFunctions
              - cloudfront:PublishFunction
              - cloudfront:TestFunction
            Resource: '*'
          - Sid: AllowCloudFrontDescribeActions
            Effect: Allow
            Action:
              - cloudfront:Get*
              - cloudfront:Describe*
              - cloudfront:List*
            Resource: '*'
          
          # WAF Permissions for CloudFront Protection
          - Sid: WAFReadPermissions
            Effect: Allow
            Action:
              - wafv2:GetWebACL
              - wafv2:ListWebACLs
              - wafv2:GetWebACLForResource
              - wafv2:ListResourcesForWebACL
              - wafv2:ListTagsForResource
            Resource:
              - !Sub 'arn:aws:wafv2:*:${AWS::AccountId}:global/webacl/*/*'
              - !Sub 'arn:aws:wafv2:*:${AWS::AccountId}:global/ipset/*/*'
          
          - Sid: WAFAssociationPermissions
            Effect: Allow
            Action:
              - wafv2:AssociateWebACL
              - wafv2:DisassociateWebACL
            Resource:
              - !Sub 'arn:aws:wafv2:*:${AWS::AccountId}:global/webacl/*/*'
              - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/*'
          
          - Sid: WAFTagPermissions
            Effect: Allow
            Action:
              - wafv2:TagResource
              - wafv2:UntagResource
            Resource: !Sub 'arn:aws:wafv2:*:${AWS::AccountId}:global/webacl/*/*'
          
          # Shield Advanced Permissions for CloudFront Protection
          - Sid: ShieldReadPermissions
            Effect: Allow
            Action:
              - shield:DescribeProtection
              - shield:ListProtections
              - shield:DescribeSubscription
              - shield:GetSubscriptionState
              - shield:DescribeDRTAccess
              - shield:DescribeEmergencyContactSettings
              - shield:ListTagsForResource
            Resource: '*'
          
          - Sid: ShieldProtectionManagement
            Effect: Allow
            Action:
              - shield:CreateProtection
              - shield:DeleteProtection
              - shield:UpdateProtection
              - shield:UpdateApplicationLayerAutomaticResponse
              - shield:EnableApplicationLayerAutomaticResponse
              - shield:DisableApplicationLayerAutomaticResponse
            Resource:
              - !Sub 'arn:aws:shield::${AWS::AccountId}:protection/*'
              - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/*'
          
          - Sid: ShieldTagManagement
            Effect: Allow
            Action:
              - shield:TagResource
              - shield:UntagResource
            Resource: !Sub 'arn:aws:shield::${AWS::AccountId}:protection/*'
          
          - Sid: ShieldHealthCheckAssociation
            Effect: Allow
            Action:
              - shield:AssociateHealthCheck
              - shield:DisassociateHealthCheck
            Resource:
              - !Sub 'arn:aws:shield::${AWS::AccountId}:protection/*'
              - !Sub 'arn:aws:route53:::healthcheck/*'
  DNSCertificateManagementPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: marketing-sites-dns-certificate-health-policy
      Description: Route53 DNS, ACM certificates, and health check management for Shield Advanced integration
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowRoute53ACMActions
            Effect: Allow
            Action:
              - route53:Change*
              - route53:Get*
              - route53:List*
              - acm:Request*
              - acm:Add*
              - acm:Describe*
            Resource: '*'
          
          # Route 53 Health Check Permissions (for Shield Advanced)
          - Sid: Route53HealthCheckManagement
            Effect: Allow
            Action:
              - route53:CreateHealthCheck
              - route53:DeleteHealthCheck
              - route53:UpdateHealthCheck
              - route53:GetHealthCheck
              - route53:GetHealthCheckStatus
              - route53:ListHealthChecks
              - route53:ChangeTagsForResource
            Resource:
              - !Sub 'arn:aws:route53:::healthcheck/*'
              - 'arn:aws:route53:::hostedzone/*'
              - 'arn:aws:route53:::change/*'
          
          # CloudWatch Alarms for Shield Health Checks
          - Sid: CloudWatchAlarmManagement
            Effect: Allow
            Action:
              - cloudwatch:PutMetricAlarm
              - cloudwatch:DeleteAlarms
              - cloudwatch:DescribeAlarms
              - cloudwatch:GetMetricStatistics
              - cloudwatch:PutMetricData
            Resource:
              - !Sub 'arn:aws:cloudwatch:*:${AWS::AccountId}:alarm:*'
  EFSManagementPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: marketing-sites-efs-management-policy
      Description: EFS permissions for marketing sites
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowEFSCreateActions
            Effect: Allow
            Action:
              - elasticfilesystem:Create*
              - elasticfilesystem:Tag*
              - elasticfilesystem:Put*
              - elasticfilesystem:Modify*
            Resource: '*'
          - Sid: AllowEFSDescribeActions
            Effect: Allow
            Action:
              - elasticfilesystem:Describe*
              - elasticfilesystem:List*
            Resource: '*'
  ElastiCacheManagementPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: marketing-sites-elasticache-management-policy
      Description: ElastiCache permissions for marketing sites
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowElastiCacheCreateActions
            Effect: Allow
            Action:
              - elasticache:Create*
              - elasticache:Add*
              - elasticache:Modify*
            Resource: '*'
          - Sid: AllowElastiCacheDescribeActions
            Effect: Allow
            Action:
              - elasticache:Describe*
              - elasticache:List*
            Resource: '*'
  AutoScalingManagementPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: marketing-sites-autoscaling-management-policy
      Description: Auto Scaling permissions for marketing sites
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowApplicationAutoScalingActions
            Effect: Allow
            Action: application-autoscaling:*
            Resource: '*'
  S3LoggingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: marketing-sites-s3-logging-policy
      Description: S3 logging permissions for marketing sites
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowS3LoggingBucketACLManagement
            Effect: Allow
            Action:
              - s3:Get*
              - s3:Put*
            Resource: "arn:aws:s3:::cdo-logs"

  # ------------------------------------------------------------
  # Provision one deployer role per environment type
  # ------------------------------------------------------------
<%
  marketing_sites_environment_configuration.each do |environment_type, configuration|
    environment_type = environment_type.to_s
    all_base_domains = configuration[:base_domain_names]
    all_hyphenated_domains = configuration[:hyphenated_base_domains]
%>
<%  # We only trust GitHub Actions to trigger Stack creation/updates for GitHub test and production Environments
    if %w[test production].include?(environment_type)%>
  GitHubActions<%=environment_type.capitalize%>Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: github-actions-cloudformation-<%=environment_type%>-role
      Description: Role for GitHub Actions to create/update CloudFormation stacks in <%=environment_type%> environment.
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub "arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com"
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                # See: https://docs.github.com/en/actions/security-for-github-actions/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services#configuring-the-role-and-trust-policy
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
              StringLike:
                token.actions.githubusercontent.com:sub: 'repo:code-dot-org/code-dot-org:environment:marketing-sites-<%=environment_type%>-*'
      Policies:
        - PolicyName: github-actions-cloudformation-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CloudFormationPermissions
                Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:GetTemplateSummary
                # Allow CloudFormation operations on stacks for all possible domain variations in this environment
                Resource:
<%    all_hyphenated_domains.each do |hyphenated_domain| %>
                  - !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stack/*<%=hyphenated_domain%>*"
<%    end %>
              - Sid: PassRoleToCloudFormation
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !GetAtt CloudFormationServiceMarketingSites<%=environment_type.capitalize%>Role.Arn
              # GitHub Actions needs to flush the content distribution network cache after invoking a successful Stack update.
              - Sid: AllowCloudfrontInvalidation
                Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource: '*'
                Condition:
                  StringEquals:
                    'aws:ResourceTag/environment-type': <%=environment_type%>
              # GitHub Actions syncs Next.js assets (CSS, javascript, fonts, images etc.) to the static assets bucket
              # during each build for all site types in this environment.
              - Sid: AllowS3StaticAssetsSync
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:DeleteObject
                  - s3:GetObject
                  - s3:GetObjectAcl
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                # Allow S3 operations for all possible domain variations in this environment
                Resource:
<%    all_base_domains.each do |base_domain| %>
                  - 'arn:aws:s3:::*<%=base_domain%>*static-assets/*'
                  - 'arn:aws:s3:::*<%=base_domain%>*static-assets'
<%    end %>
              - Sid: AllowEC2DescribeAvailabilityZones
                Effect: Allow
                Action:
                  - ec2:DescribeAvailabilityZones
                Resource: '*'
<%  end %>
  # Enforce least privilege on Roles created/passed/attached by the Role that provisions marketing site Stacks.
  MarketingSitesRoleCreationBoundary<%=environment_type.capitalize%>Policy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Permissions boundary for Roles created by CloudFormationMarketingSites<%=environment_type.capitalize%>Role
      ManagedPolicyName: marketing-sites-role-permissions-boundary-<%=environment_type%>-policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowSecretsManagerForMarketingSites
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Resource: 'arn:aws:secretsmanager:*:*:secret:marketing-sites/<%=environment_type%>/*'
          - Sid: AllowCloudfrontInvalidation
            Effect: Allow
            Action:
              - cloudfront:CreateInvalidation
            Resource: '*'
            Condition:
              StringEquals:
                aws:ResourceTag/environment-type: <%=environment_type%>
          - Sid: AllowECSOperationsOnTaggedResources
            Effect: Allow
            Action:
              - ecs:UpdateService
              - ecs:DescribeServices
            Resource: '*'
            Condition:
              StringEquals:
                aws:ResourceTag/environment-type: <%=environment_type%>
          - Sid: AllowCloudWatchForAutoScaling
            Effect: Allow
            Action:
              - cloudwatch:DescribeAlarms
              - cloudwatch:GetMetricStatistics
              - cloudwatch:PutMetricAlarm
              - cloudwatch:DeleteAlarms
            Resource: '*'
          - Sid: AllowECSTaskExecutionLogging
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            # Allow logging for all possible domain variations in this environment
            Resource:
<%    all_hyphenated_domains.each do |hyphenated_domain| %>
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/ecs/*<%=hyphenated_domain%>*:log-stream:*/*"
<%    end %>
          - Sid: AllowECSTaskExecutionCreateLogGroup
            Action:
              - logs:CreateLogGroup
            Effect: Allow
            # Allow log group creation for all possible domain variations in this environment
            Resource:
<%    all_hyphenated_domains.each do |hyphenated_domain| %>
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/ecs/*<%=hyphenated_domain%>*"
              - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/ecs/*<%=hyphenated_domain%>*:log-stream:*"
<%    end %>
<%    if environment_type != 'production' %>
          - Sid: AllowSSMMessagesForECSExec
            Effect: Allow
            Action:
              - ssmmessages:CreateControlChannel
              - ssmmessages:CreateDataChannel
              - ssmmessages:OpenControlChannel
              - ssmmessages:OpenDataChannel
            Resource: '*'
<%    end %>

  CloudFormationServiceMarketingSites<%=environment_type.capitalize%>Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CloudFormationMarketingSites<%=environment_type.capitalize%>Role
      Path: /admin/
      Description: CloudFormation service role for deploying all marketing site types in <%=environment_type%> environment
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref CloudFormationPolicy
        - !Ref EC2ManagementPolicy
        - !Ref ECSManagementPolicy
        - !Ref LoadBalancerManagementPolicy
        - !Ref CloudFrontManagementPolicy
        - !Ref DNSCertificateManagementPolicy
        - !Ref EFSManagementPolicy
        - !Ref ElastiCacheManagementPolicy
        - !Ref AutoScalingManagementPolicy
        - !Ref S3LoggingPolicy
      Policies:
        - PolicyName: EnvironmentSpecific<%=environment_type.capitalize%>Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudFormation<%=environment_type.capitalize%>
                Effect: Allow
                Action: cloudformation:*
                # Allow CloudFormation operations on all possible domain variations in this environment
                # Stack naming examples:
                # marketing-sites-production-code-org (corporate production)
                # marketing-sites-production-csforall-org (CSforALL production)
                # marketing-sites-test-marketing-sites-test-code-org (any site type in test)
                # marketing-sites-development-marketing-sites-dev-code-org-feature-branch (any site type in dev)
                Resource:
<%    all_hyphenated_domains.each do |hyphenated_domain| %>
                  - !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stack/*<%=hyphenated_domain%>*"
<%    end %>
              - Sid: AllowCreateRoleWithBoundary
                Effect: Allow
                Action:
                  - iam:AttachRolePolicy
                  - iam:CreateRole
                  - iam:DeleteRolePolicy
                  - iam:DetachRolePolicy
                  - iam:PutRolePolicy
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/marketing-sites-<%=environment_type%>-*"
                Condition:
                  StringEquals:
                    iam:PermissionsBoundary: !Ref MarketingSitesRoleCreationBoundary<%=environment_type.capitalize%>Policy

              - Sid: AllowIAMRoleManagement
                Effect: Allow
                Action:
                  - iam:CreatePolicy
                  - iam:DeleteRole
                  - iam:DeletePolicy
                  - iam:DeleteRolePolicy
                  - iam:GetRole*
                  - iam:ListAttachedRolePolicies
                  - iam:TagRole
                  - iam:GetRolePolicy
                  - iam:ListRolePolicies
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/marketing-sites-<%=environment_type%>-*"

              - Sid: AllowPermissionsBoundaryPolicyAccess
                Effect: Allow
                Action:
                  - iam:GetPolicy
                  - iam:GetPolicyVersion
                  - iam:ListPolicyVersions
                Resource: !Ref MarketingSitesRoleCreationBoundary<%=environment_type.capitalize%>Policy

              - Sid: AllowPassRoleToService
                Effect: Allow
                Action: iam:PassRole
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/marketing-sites-<%=environment_type%>-*"
                Condition:
                  StringEquals:
                    iam:PassedToService:
                      - ecs-tasks.amazonaws.com
                      - application-autoscaling.amazonaws.com

              # Environment-specific resource deletions for all site types
              - Sid: AllowTaggedResourceDeletions
                Effect: Allow
                Action:
                  - ec2:Delete*
                  - ec2:Release*
                  - ec2:Disassociate*
                  - ec2:Detach*
                  - ec2:Revoke*
                  - ecs:Update*
                  - ecs:Delete*
                  - elasticloadbalancing:Delete*
                  - elasticloadbalancing:Deregister*
                  - cloudfront:Update*
                  - cloudfront:Delete*
                  - acm:Delete*
                  - secretsmanager:Delete*
                  - elasticfilesystem:Delete*
                  - elasticfilesystem:Untag*
                  - elasticache:Delete*
                  - elasticache:Remove*
                Resource: '*'
                Condition:
                  StringEquals:
                    'aws:ResourceTag/environment-type': <%=environment_type%>

              # ECS resources for all possible domain variations in this environment
              - Sid: AllowECSCreateActionsOnSpecificResources
                Effect: Allow
                Action:
                  - ecs:Create*
                  - ecs:Register*
                  - ecs:Tag*
                Resource:
                  - !Sub "arn:aws:ecs:*:${AWS::AccountId}:cluster/*"
<%    all_hyphenated_domains.each do |hyphenated_domain| %>
                  - !Sub "arn:aws:ecs:*:${AWS::AccountId}:task-definition/*<%=hyphenated_domain%>*:*"
                  - !Sub "arn:aws:ecs:*:${AWS::AccountId}:service/*/*-<%=hyphenated_domain%>-*"
<%    end %>

              # S3 static assets for all possible domain variations in this environment
              - Sid: AllowS3ActionsOnStaticAssets
                Effect: Allow
                Action:
                  - s3:Create*
                  - s3:Put*
                  - s3:Delete*
                  - s3:Get*
                  - s3:List*
                Resource:
<%    all_base_domains.each do |base_domain| %>
                  - "arn:aws:s3:::*<%=base_domain%>*static-assets"
                  - "arn:aws:s3:::*<%=base_domain%>*static-assets/*"
<%    end %>

              - Sid: AllowSecretsManagerActions
                Effect: Allow
                Action:
                  - secretsmanager:Get*
                  - secretsmanager:Describe*
                Resource: "arn:aws:secretsmanager:*:*:secret:marketing-sites/<%=environment_type%>/*"
              
              # WAF Web ACL Association for CloudFront
              - Sid: AllowMarketingSitesWebACLAssociation
                Effect: Allow
                Action:
                  - wafv2:AssociateWebACL
                  - wafv2:DisassociateWebACL
                  - wafv2:GetWebACLForResource
                Resource:
                  - !GetAtt MarketingSitesWebACL.Arn
                  - !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/*"
              
              # Shield Advanced Protection for CloudFront (primarily for production)
              - Sid: AllowShieldProtectionForCloudFront
                Effect: Allow
                Action:
                  - shield:CreateProtection
                  - shield:DeleteProtection
                  - shield:UpdateProtection
                  - shield:DescribeProtection
                  - shield:AssociateHealthCheck
                  - shield:DisassociateHealthCheck
                  - shield:TagResource
                  - shield:UntagResource
                Resource:
                  - !Sub "arn:aws:shield::${AWS::AccountId}:protection/*"
                  - !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/*"
<% end %>

Outputs:
  MarketingSitesWebACLArn:
    Description: ARN of the Marketing Sites WAF Web ACL
    Value: !GetAtt MarketingSitesWebACL.Arn
  MarketingSitesWebACLId:
    Description: ID of the Marketing Sites WAF Web ACL
    Value: !GetAtt MarketingSitesWebACL.Id
  MarketingSitesWebACLName:
    Description: Name of the Marketing Sites WAF Web ACL for easy reference
    Value: !Ref MarketingSitesWebACL
<%
  marketing_sites_environment_configuration.each do |environment_type, _|
    environment_type = environment_type.to_s
%>
  CloudFormationServiceMarketingSites<%=environment_type.capitalize%>RoleArn:
    Description: ARN of the CloudFormation service role for <%=environment_type%> environment (all site types)
    Value: !GetAtt CloudFormationServiceMarketingSites<%=environment_type.capitalize%>Role.Arn
  MarketingSitesRoleCreationBoundary<%=environment_type.capitalize%>PolicyArn:
    Description: ARN of the permissions boundary policy for <%=environment_type%> environment roles
    Value: !Ref MarketingSitesRoleCreationBoundary<%=environment_type.capitalize%>Policy
<%  if %w[test production].include?(environment_type) %>
  GitHubActions<%=environment_type.capitalize%>RoleArn:
    Description: ARN of the GitHub Actions role for <%=environment_type%> environment (all site types)
    Value: !GetAtt GitHubActions<%=environment_type.capitalize%>Role.Arn
<%  end %>
<%end %>
