@use '@code-dot-org/component-library-styles/mixins.scss' as mixins;
@use '@code-dot-org/component-library-styles/variables.scss' as variables;

$mobileBreakpoint: 900px;

// ActionBlock common styles
.actionBlock {
  @include mixins.border-styles;
  text-align: initial;
  padding: 1.25rem;
  box-sizing: border-box;
  width: 100%;
  position: relative;

  figure {
    width: 100%;
    height: unset;
    aspect-ratio: 7 / 4;
    margin: 0 0 1rem 0;
    border-radius: 0;
  }

  .overline {
    color: var(--text-brand-teal-primary);
    margin-block: -0.25rem 0.5rem;
  }

  .tag {
    position: absolute;
    inset-block-start: 0.5rem;
    inset-inline-end: 0.5rem;
    background: var(--background-accent-strawberry-primary);
    color: var(--text-neutral-white-fixed);
    font-size: 0.75rem;
    font-weight: 500;
    text-transform: uppercase;
    margin: 0;
    padding: 0.125rem 0.5rem;
    border-radius: 1rem;
    z-index: variables.$zindex-fixed;
  }

  p {
    margin-block: 0 1rem;
  }

  .buttonWrapper {
    margin-top: 0.25rem;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }
}

// Action block background styles
.actionBlock-background {
  &-primary {
    background-color: var(--background-neutral-secondary);
  }

  &-secondary {
    background-color: var(--background-neutral-primary);
  }
}

// Basic action block styles
.oneColumn {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

// Full width action block styles
.fullWidth {
  @media (min-width: $mobileBreakpoint) {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;

    figure {
      margin-bottom: 0;
    }

    .buttonWrapper > a {
      width: fit-content;
    }
  }

  @media (max-width: $mobileBreakpoint) {
    .tag {
      inset-block-start: 2rem;
      inset-inline-end: 2rem;
      box-shadow: 0 0 6px rgba(0 0 0 / 0.2);
    }
  }
}
